{{- $replicaCount := int 1 -}}
{{- $releaseNamespace := .Release.Namespace -}}
{{- $clusterDomain := .Values.clusterDomain -}}
{{- $fullname := include "iotdb.fullname" . -}}
{{- $servicePort := int .Values.rpc.port -}}
{{- $serverList := list }}
{{- range $e, $i := until $replicaCount }}
{{- $serverList = append $serverList (printf "%s-%d.%s-headless.%s.svc.%s:%d" $fullname $i $fullname $releaseNamespace $clusterDomain $servicePort) }}
{{- end }}

** Please be patient while the chart is being deployed **

{{- if eq .Values.service.type "NodePort" }}
IoTDB can be accessed by consumers via nodePort {{ .Values.service.nodePort }} on the nodes.
{{ else }}
IoTDB can be accessed by consumers via port {{ $servicePort }} on the following DNS name from within your cluster:

    {{ $fullname }}.{{ $releaseNamespace }}.svc.{{ $clusterDomain }}:{{ $servicePort }}
{{- end }}
Each IoTDB Server can be accessed by producers via port {{ $servicePort }} on the following DNS name(s) from within your cluster:

{{ join "\n" $serverList | indent 4 }}

{{- if .Values.grafana.enable }}
You can use grafana to display time serials data in IOTDB.

    1. add the simple-json-datasource plugin to your grafana;
    2. use docker image which contains iotdb-grafana.war;
    3. have fun with grafana.
{{- end }}
